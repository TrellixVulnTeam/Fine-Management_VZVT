{"ast":null,"code":"import _asyncToGenerator from \"E:\\\\kaz\\\\fineManagement\\\\FineManagement.Web\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { lastValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./user-team.service\";\nimport * as i2 from \"./team.service\";\nexport class MyProfileService {\n  constructor(userTeamService, teamService) {\n    this.userTeamService = userTeamService;\n    this.teamService = teamService;\n  }\n\n  getProfile() {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n\n  getMyActiveTeamsAsync() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let teams = [];\n      let userTeams = [];\n      let myTeams = [];\n\n      const myProfile = _this.getProfile();\n\n      const teams$ = _this.teamService.getAllTeams();\n\n      const userTeams$ = _this.userTeamService.getAllUserTeams();\n\n      teams = yield lastValueFrom(teams$);\n      userTeams = yield lastValueFrom(userTeams$);\n      userTeams.filter(ut => ut.isActive && ut.userId == myProfile.id).forEach(ut => myTeams.push(teams.find(t => t.id == ut.teamId)));\n      return myTeams;\n    })();\n  }\n\n}\n\nMyProfileService.ɵfac = function MyProfileService_Factory(t) {\n  return new (t || MyProfileService)(i0.ɵɵinject(i1.UserTeamService), i0.ɵɵinject(i2.TeamService));\n};\n\nMyProfileService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MyProfileService,\n  factory: MyProfileService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["E:/kaz/fineManagement/FineManagement.Web/src/app/core/services/my-profile.service.ts"],"names":["lastValueFrom","i0","i1","i2","MyProfileService","constructor","userTeamService","teamService","getProfile","JSON","parse","localStorage","getItem","getMyActiveTeamsAsync","teams","userTeams","myTeams","myProfile","teams$","getAllTeams","userTeams$","getAllUserTeams","filter","ut","isActive","userId","id","forEach","push","find","t","teamId","ɵfac","MyProfileService_Factory","ɵɵinject","UserTeamService","TeamService","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,aAAT,QAA8B,MAA9B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,qBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,gBAApB;AACA,OAAO,MAAMC,gBAAN,CAAuB;AAC1BC,EAAAA,WAAW,CAACC,eAAD,EAAkBC,WAAlB,EAA+B;AACtC,SAAKD,eAAL,GAAuBA,eAAvB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACH;;AACDC,EAAAA,UAAU,GAAG;AACT,WAAOC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAP;AACH;;AACKC,EAAAA,qBAAqB,GAAG;AAAA;;AAAA;AAC1B,UAAIC,KAAK,GAAG,EAAZ;AACA,UAAIC,SAAS,GAAG,EAAhB;AACA,UAAIC,OAAO,GAAG,EAAd;;AACA,YAAMC,SAAS,GAAG,KAAI,CAACT,UAAL,EAAlB;;AACA,YAAMU,MAAM,GAAG,KAAI,CAACX,WAAL,CAAiBY,WAAjB,EAAf;;AACA,YAAMC,UAAU,GAAG,KAAI,CAACd,eAAL,CAAqBe,eAArB,EAAnB;;AACAP,MAAAA,KAAK,SAASd,aAAa,CAACkB,MAAD,CAA3B;AACAH,MAAAA,SAAS,SAASf,aAAa,CAACoB,UAAD,CAA/B;AACAL,MAAAA,SAAS,CACJO,MADL,CACaC,EAAD,IAAQA,EAAE,CAACC,QAAH,IAAeD,EAAE,CAACE,MAAH,IAAaR,SAAS,CAACS,EAD1D,EAEKC,OAFL,CAEcJ,EAAD,IAAQP,OAAO,CAACY,IAAR,CAAad,KAAK,CAACe,IAAN,CAAYC,CAAD,IAAOA,CAAC,CAACJ,EAAF,IAAQH,EAAE,CAACQ,MAA7B,CAAb,CAFrB;AAGA,aAAOf,OAAP;AAZ0B;AAa7B;;AArByB;;AAuB9BZ,gBAAgB,CAAC4B,IAAjB,GAAwB,SAASC,wBAAT,CAAkCH,CAAlC,EAAqC;AAAE,SAAO,KAAKA,CAAC,IAAI1B,gBAAV,EAA4BH,EAAE,CAACiC,QAAH,CAAYhC,EAAE,CAACiC,eAAf,CAA5B,EAA6DlC,EAAE,CAACiC,QAAH,CAAY/B,EAAE,CAACiC,WAAf,CAA7D,CAAP;AAAmG,CAAlK;;AACAhC,gBAAgB,CAACiC,KAAjB,GAAyB,aAAcpC,EAAE,CAACqC,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEnC,gBAAT;AAA2BoC,EAAAA,OAAO,EAAEpC,gBAAgB,CAAC4B,IAArD;AAA2DS,EAAAA,UAAU,EAAE;AAAvE,CAAtB,CAAvC","sourcesContent":["import { lastValueFrom } from 'rxjs';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"./user-team.service\";\r\nimport * as i2 from \"./team.service\";\r\nexport class MyProfileService {\r\n    constructor(userTeamService, teamService) {\r\n        this.userTeamService = userTeamService;\r\n        this.teamService = teamService;\r\n    }\r\n    getProfile() {\r\n        return JSON.parse(localStorage.getItem('user'));\r\n    }\r\n    async getMyActiveTeamsAsync() {\r\n        let teams = [];\r\n        let userTeams = [];\r\n        let myTeams = [];\r\n        const myProfile = this.getProfile();\r\n        const teams$ = this.teamService.getAllTeams();\r\n        const userTeams$ = this.userTeamService.getAllUserTeams();\r\n        teams = await lastValueFrom(teams$);\r\n        userTeams = await lastValueFrom(userTeams$);\r\n        userTeams\r\n            .filter((ut) => ut.isActive && ut.userId == myProfile.id)\r\n            .forEach((ut) => myTeams.push(teams.find((t) => t.id == ut.teamId)));\r\n        return myTeams;\r\n    }\r\n}\r\nMyProfileService.ɵfac = function MyProfileService_Factory(t) { return new (t || MyProfileService)(i0.ɵɵinject(i1.UserTeamService), i0.ɵɵinject(i2.TeamService)); };\r\nMyProfileService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: MyProfileService, factory: MyProfileService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}